# templates/grafana_nginx.conf.j2

# HTTP server block for certbot and certificate renewal
server {
    listen 80;
    server_name {{ domain_name }};

    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    location / {
        return 301 https://$host$request_uri;  # Redirect HTTP to HTTPS
    }
}

# Grafana default on 443
server {
    listen 443 ssl;
    server_name {{ domain_name }};

    ssl_certificate /etc/letsencrypt/live/{{ domain_name }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ domain_name }}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        proxy_pass http://127.0.0.1:3000/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # IP Whitelisting for Prometheus access
        allow 192.168.0.0/16;       # Replace with trusted IP addresses
        allow 10.168.0.0/16;        # Example of a trusted CIDR block
        deny all;                   # Deny access to all other IPs

    }
}

# Prometheus on 9443 with IP whitelisting
server {
    listen 9443 ssl;
    server_name {{ domain_name }};

    ssl_certificate /etc/letsencrypt/live/{{ domain_name }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ domain_name }}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        proxy_pass http://127.0.0.1:9090/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # IP Whitelisting for Prometheus access
        allow 192.168.0.0/16;       # Replace with trusted IP addresses
        allow 10.168.0.0/16;        # Example of a trusted CIDR block
        deny all;                   # Deny access to all other IPs
    }
}